package org.cloudburstmc.protocol.bedrock.codec.v291;

import lombok.AccessLevel;
import lombok.NoArgsConstructor;
import org.cloudburstmc.protocol.bedrock.codec.BedrockCodec;
import org.cloudburstmc.protocol.bedrock.codec.v291.serializer.*;
import org.cloudburstmc.protocol.bedrock.data.LevelEvent;
import org.cloudburstmc.protocol.bedrock.data.LevelEventType;
import org.cloudburstmc.protocol.bedrock.data.ParticleType;
import org.cloudburstmc.protocol.bedrock.data.SoundEvent;
import org.cloudburstmc.protocol.bedrock.data.command.CommandParam;
import org.cloudburstmc.protocol.bedrock.data.entity.EntityData;
import org.cloudburstmc.protocol.bedrock.data.entity.EntityEventType;
import org.cloudburstmc.protocol.bedrock.data.entity.EntityFlag;
import org.cloudburstmc.protocol.bedrock.packet.*;
import org.cloudburstmc.protocol.common.util.TypeMap;

@NoArgsConstructor(access = AccessLevel.PROTECTED)
public class Bedrock_v291 {

    protected static final TypeMap<EntityData> ENTITY_DATA = TypeMap.builder(EntityData.class)
            .insert(0, EntityData.FLAGS)
            .insert(1, EntityData.HEALTH)
            .insert(2, EntityData.VARIANT)
            .insert(3, EntityData.COLOR)
            .insert(4, EntityData.NAMETAG)
            .insert(5, EntityData.OWNER_EID)
            .insert(6, EntityData.TARGET_EID)
            .insert(7, EntityData.AIR_SUPPLY)
            .insert(8, EntityData.EFFECT_COLOR)
            .insert(9, EntityData.EFFECT_AMBIENT)
            .insert(10, EntityData.JUMP_DURATION)
            .insert(11, EntityData.HURT_TIME)
            .insert(12, EntityData.HURT_DIRECTION)
            .insert(13, EntityData.ROW_TIME_LEFT)
            .insert(14, EntityData.ROW_TIME_RIGHT)
            .insert(15, EntityData.EXPERIENCE_VALUE)
            .insert(16, EntityData.DISPLAY_ITEM)
            .insert(17, EntityData.DISPLAY_OFFSET)
            .insert(18, EntityData.CUSTOM_DISPLAY)
            .insert(19, EntityData.SWELL)
            .insert(20, EntityData.OLD_SWELL)
            .insert(21, EntityData.SWELL_DIRECTION)
            .insert(22, EntityData.CHARGE_AMOUNT)
            .insert(23, EntityData.CARRIED_BLOCK)
            .insert(24, EntityData.CLIENT_EVENT)
            .insert(25, EntityData.USING_ITEM)
            .insert(26, EntityData.PLAYER_FLAGS)
            .insert(27, EntityData.PLAYER_INDEX)
            .insert(28, EntityData.BED_POSITION)
            .insert(29, EntityData.X_POWER)
            .insert(30, EntityData.Y_POWER)
            .insert(31, EntityData.Z_POWER)
            .insert(32, EntityData.AUX_POWER)
            .insert(33, EntityData.FISH_X)
            .insert(34, EntityData.FISH_Z)
            .insert(35, EntityData.FISH_ANGLE)
            .insert(36, EntityData.POTION_AUX_VALUE)
            .insert(37, EntityData.LEASH_HOLDER_EID)
            .insert(38, EntityData.SCALE)
            .insert(39, EntityData.INTERACTIVE_TAG)
            .insert(40, EntityData.NPC_SKIN_ID)
            .insert(41, EntityData.URL_TAG)
            .insert(42, EntityData.MAX_AIR_SUPPLY)
            .insert(43, EntityData.MARK_VARIANT)
            .insert(44, EntityData.CONTAINER_TYPE)
            .insert(45, EntityData.CONTAINER_BASE_SIZE)
            .insert(46, EntityData.CONTAINER_STRENGTH_MODIFIER)
            .insert(47, EntityData.BLOCK_TARGET)
            .insert(48, EntityData.WITHER_INVULNERABLE_TICKS)
            .insert(49, EntityData.WITHER_TARGET_1)
            .insert(50, EntityData.WITHER_TARGET_2)
            .insert(51, EntityData.WITHER_TARGET_3)
            .insert(52, EntityData.WITHER_AERIAL_ATTACK)
            .insert(53, EntityData.BOUNDING_BOX_WIDTH)
            .insert(54, EntityData.BOUNDING_BOX_HEIGHT)
            .insert(55, EntityData.FUSE_LENGTH)
            .insert(56, EntityData.RIDER_SEAT_POSITION)
            .insert(57, EntityData.RIDER_ROTATION_LOCKED)
            .insert(58, EntityData.RIDER_MAX_ROTATION)
            .insert(59, EntityData.RIDER_MIN_ROTATION)
            .insert(60, EntityData.AREA_EFFECT_CLOUD_RADIUS)
            .insert(61, EntityData.AREA_EFFECT_CLOUD_WAITING)
            .insert(62, EntityData.AREA_EFFECT_CLOUD_PARTICLE_ID)
            .insert(63, EntityData.SHULKER_PEEK_ID)
            .insert(64, EntityData.SHULKER_ATTACH_FACE)
            .insert(66, EntityData.SHULKER_ATTACH_POS)
            .insert(67, EntityData.TRADE_TARGET_EID)
            .insert(69, EntityData.COMMAND_BLOCK_ENABLED) // Unsure
            .insert(70, EntityData.COMMAND_BLOCK_COMMAND)
            .insert(71, EntityData.COMMAND_BLOCK_LAST_OUTPUT)
            .insert(72, EntityData.COMMAND_BLOCK_TRACK_OUTPUT)
            .insert(73, EntityData.CONTROLLING_RIDER_SEAT_INDEX)
            .insert(74, EntityData.STRENGTH)
            .insert(75, EntityData.MAX_STRENGTH)
            .insert(76, EntityData.EVOKER_SPELL_COLOR)
            .insert(77, EntityData.LIMITED_LIFE)
            .insert(78, EntityData.ARMOR_STAND_POSE_INDEX)
            .insert(79, EntityData.ENDER_CRYSTAL_TIME_OFFSET)
            .insert(80, EntityData.NAMETAG_ALWAYS_SHOW)
            .insert(81, EntityData.COLOR_2)
            .insert(83, EntityData.SCORE_TAG)
            .insert(84, EntityData.BALLOON_ATTACHED_ENTITY)
            .insert(85, EntityData.PUFFERFISH_SIZE)
            .insert(86, EntityData.BOAT_BUBBLE_TIME)
            .insert(87, EntityData.AGENT_ID)
            .build();

    protected static final TypeMap<EntityFlag> ENTITY_FLAGS = TypeMap.builder(EntityFlag.class)
            .insert(0, EntityFlag.ON_FIRE)
            .insert(1, EntityFlag.SNEAKING)
            .insert(2, EntityFlag.RIDING)
            .insert(3, EntityFlag.SPRINTING)
            .insert(4, EntityFlag.USING_ITEM)
            .insert(5, EntityFlag.INVISIBLE)
            .insert(6, EntityFlag.TEMPTED)
            .insert(7, EntityFlag.IN_LOVE)
            .insert(8, EntityFlag.SADDLED)
            .insert(9, EntityFlag.POWERED)
            .insert(10, EntityFlag.IGNITED)
            .insert(11, EntityFlag.BABY)
            .insert(12, EntityFlag.CONVERTING)
            .insert(13, EntityFlag.CRITICAL)
            .insert(14, EntityFlag.CAN_SHOW_NAME)
            .insert(15, EntityFlag.ALWAYS_SHOW_NAME)
            .insert(16, EntityFlag.NO_AI)
            .insert(17, EntityFlag.SILENT)
            .insert(18, EntityFlag.WALL_CLIMBING)
            .insert(19, EntityFlag.CAN_CLIMB)
            .insert(20, EntityFlag.CAN_SWIM)
            .insert(21, EntityFlag.CAN_FLY)
            .insert(22, EntityFlag.CAN_WALK)
            .insert(23, EntityFlag.RESTING)
            .insert(24, EntityFlag.SITTING)
            .insert(25, EntityFlag.ANGRY)
            .insert(26, EntityFlag.INTERESTED)
            .insert(27, EntityFlag.CHARGED)
            .insert(28, EntityFlag.TAMED)
            .insert(29, EntityFlag.ORPHANED)
            .insert(30, EntityFlag.LEASHED)
            .insert(31, EntityFlag.SHEARED)
            .insert(32, EntityFlag.GLIDING)
            .insert(33, EntityFlag.ELDER)
            .insert(34, EntityFlag.MOVING)
            .insert(35, EntityFlag.BREATHING)
            .insert(36, EntityFlag.CHESTED)
            .insert(37, EntityFlag.STACKABLE)
            .insert(38, EntityFlag.SHOW_BOTTOM)
            .insert(39, EntityFlag.STANDING)
            .insert(40, EntityFlag.SHAKING)
            .insert(41, EntityFlag.IDLING)
            .insert(42, EntityFlag.CASTING)
            .insert(43, EntityFlag.CHARGING)
            .insert(44, EntityFlag.WASD_CONTROLLED)
            .insert(45, EntityFlag.CAN_POWER_JUMP)
            .insert(46, EntityFlag.LINGERING)
            .insert(47, EntityFlag.HAS_COLLISION)
            .insert(48, EntityFlag.HAS_GRAVITY)
            .insert(49, EntityFlag.FIRE_IMMUNE)
            .insert(50, EntityFlag.DANCING)
            .insert(51, EntityFlag.ENCHANTED)
            .insert(52, EntityFlag.RETURN_TRIDENT)
            .insert(53, EntityFlag.CONTAINER_IS_PRIVATE)
            .insert(54, EntityFlag.IS_TRANSFORMING)
            .insert(55, EntityFlag.DAMAGE_NEARBY_MOBS)
            .insert(56, EntityFlag.SWIMMING)
            .insert(57, EntityFlag.BRIBED)
            .insert(58, EntityFlag.IS_PREGNANT)
            .insert(59, EntityFlag.LAYING_EGG)
            .insert(60, EntityFlag.RIDER_CAN_PICK)
            .build();

    protected static final TypeMap<EntityData.Type> ENTITY_DATA_TYPES = TypeMap.<EntityData.Type>builder("EntityDataType")
            // TODO: .insert(7, EntityData.Type.FLAGS)
            .insert(0, EntityData.Type.BYTE)
            .insert(1, EntityData.Type.SHORT)
            .insert(2, EntityData.Type.INT)
            .insert(3, EntityData.Type.FLOAT)
            .insert(4, EntityData.Type.STRING)
            .insert(5, EntityData.Type.NBT)
            .insert(6, EntityData.Type.VECTOR3I)
            .insert(7, EntityData.Type.LONG)
            .insert(8, EntityData.Type.VECTOR3F)
            .build();

    protected static final TypeMap<Class<?>> GAME_RULE_TYPES = TypeMap.<Class<?>>builder("GameRuleType")
            .insert(1, Boolean.class)
            .insert(2, Integer.class)
            .insert(3, Float.class)
            .build();

    protected static final int LEVEL_EVENT_SOUND = 1000;
    protected static final int LEVEL_EVENT_PARTICLE = 2000;
    protected static final int LEVEL_EVENT_WORLD = 3000;
    protected static final int LEVEL_EVENT_BLOCK = 3500;
    protected static final int LEVEL_EVENT_PARTICLE_TYPE = 0x4000;

    @SuppressWarnings("PointlessArithmeticExpression")
    protected static final TypeMap<LevelEventType> LEVEL_EVENTS = TypeMap.builder(LevelEventType.class)
            .insert(0, LevelEvent.UNDEFINED)
            .insert(LEVEL_EVENT_SOUND + 0, LevelEvent.SOUND_CLICK)
            .insert(LEVEL_EVENT_SOUND + 1, LevelEvent.SOUND_CLICK_FAIL)
            .insert(LEVEL_EVENT_SOUND + 2, LevelEvent.SOUND_LAUNCH)
            .insert(LEVEL_EVENT_SOUND + 3, LevelEvent.SOUND_DOOR_OPEN)
            .insert(LEVEL_EVENT_SOUND + 4, LevelEvent.SOUND_FIZZ)
            .insert(LEVEL_EVENT_SOUND + 5, LevelEvent.SOUND_FUSE)
            .insert(LEVEL_EVENT_SOUND + 6, LevelEvent.SOUND_PLAY_RECORDING)
            .insert(LEVEL_EVENT_SOUND + 7, LevelEvent.SOUND_GHAST_WARNING)
            .insert(LEVEL_EVENT_SOUND + 8, LevelEvent.SOUND_GHAST_FIREBALL)
            .insert(LEVEL_EVENT_SOUND + 9, LevelEvent.SOUND_BLAZE_FIREBALL)
            .insert(LEVEL_EVENT_SOUND + 10, LevelEvent.SOUND_ZOMBIE_DOOR_BUMP)
            .insert(LEVEL_EVENT_SOUND + 12, LevelEvent.SOUND_ZOMBIE_DOOR_CRASH)
            .insert(LEVEL_EVENT_SOUND + 16, LevelEvent.SOUND_ZOMBIE_INFECTED)
            .insert(LEVEL_EVENT_SOUND + 17, LevelEvent.SOUND_ZOMBIE_CONVERTED)
            .insert(LEVEL_EVENT_SOUND + 18, LevelEvent.SOUND_ENDERMAN_TELEPORT)
            .insert(LEVEL_EVENT_SOUND + 20, LevelEvent.SOUND_ANVIL_BROKEN)
            .insert(LEVEL_EVENT_SOUND + 21, LevelEvent.SOUND_ANVIL_USED)
            .insert(LEVEL_EVENT_SOUND + 22, LevelEvent.SOUND_ANVIL_LAND)
            .insert(LEVEL_EVENT_SOUND + 30, LevelEvent.SOUND_INFINITY_ARROW_PICKUP)
            .insert(LEVEL_EVENT_SOUND + 32, LevelEvent.SOUND_TELEPORT_ENDERPEARL)
            .insert(LEVEL_EVENT_SOUND + 40, LevelEvent.SOUND_ITEMFRAME_ITEM_ADD)
            .insert(LEVEL_EVENT_SOUND + 41, LevelEvent.SOUND_ITEMFRAME_BREAK)
            .insert(LEVEL_EVENT_SOUND + 42, LevelEvent.SOUND_ITEMFRAME_PLACE)
            .insert(LEVEL_EVENT_SOUND + 43, LevelEvent.SOUND_ITEMFRAME_ITEM_REMOVE)
            .insert(LEVEL_EVENT_SOUND + 44, LevelEvent.SOUND_ITEMFRAME_ITEM_ROTATE)
            .insert(LEVEL_EVENT_SOUND + 51, LevelEvent.SOUND_EXPERIENCE_ORB_PICKUP)
            .insert(LEVEL_EVENT_SOUND + 52, LevelEvent.SOUND_TOTEM_USED)
            .insert(LEVEL_EVENT_SOUND + 60, LevelEvent.SOUND_ARMOR_STAND_BREAK)
            .insert(LEVEL_EVENT_SOUND + 61, LevelEvent.SOUND_ARMOR_STAND_HIT)
            .insert(LEVEL_EVENT_SOUND + 62, LevelEvent.SOUND_ARMOR_STAND_LAND)
            .insert(LEVEL_EVENT_SOUND + 63, LevelEvent.SOUND_ARMOR_STAND_PLACE)
            .insert(LEVEL_EVENT_PARTICLE + 0, LevelEvent.PARTICLE_SHOOT)
            .insert(LEVEL_EVENT_PARTICLE + 1, LevelEvent.PARTICLE_DESTROY_BLOCK)
            .insert(LEVEL_EVENT_PARTICLE + 2, LevelEvent.PARTICLE_POTION_SPLASH)
            .insert(LEVEL_EVENT_PARTICLE + 3, LevelEvent.PARTICLE_EYE_OF_ENDER_DEATH)
            .insert(LEVEL_EVENT_PARTICLE + 4, LevelEvent.PARTICLE_MOB_BLOCK_SPAWN)
            .insert(LEVEL_EVENT_PARTICLE + 5, LevelEvent.PARTICLE_CROP_GROWTH)
            .insert(LEVEL_EVENT_PARTICLE + 6, LevelEvent.PARTICLE_SOUND_GUARDIAN_GHOST)
            .insert(LEVEL_EVENT_PARTICLE + 7, LevelEvent.PARTICLE_DEATH_SMOKE)
            .insert(LEVEL_EVENT_PARTICLE + 8, LevelEvent.PARTICLE_DENY_BLOCK)
            .insert(LEVEL_EVENT_PARTICLE + 9, LevelEvent.PARTICLE_GENERIC_SPAWN)
            .insert(LEVEL_EVENT_PARTICLE + 10, LevelEvent.PARTICLE_DRAGON_EGG)
            .insert(LEVEL_EVENT_PARTICLE + 11, LevelEvent.PARTICLE_CROP_EATEN)
            .insert(LEVEL_EVENT_PARTICLE + 12, LevelEvent.PARTICLE_CRIT)
            .insert(LEVEL_EVENT_PARTICLE + 13, LevelEvent.PARTICLE_TELEPORT)
            .insert(LEVEL_EVENT_PARTICLE + 14, LevelEvent.PARTICLE_CRACK_BLOCK)
            .insert(LEVEL_EVENT_PARTICLE + 15, LevelEvent.PARTICLE_BUBBLES)
            .insert(LEVEL_EVENT_PARTICLE + 16, LevelEvent.PARTICLE_EVAPORATE)
            .insert(LEVEL_EVENT_PARTICLE + 17, LevelEvent.PARTICLE_DESTROY_ARMOR_STAND)
            .insert(LEVEL_EVENT_PARTICLE + 18, LevelEvent.PARTICLE_BREAKING_EGG)
            .insert(LEVEL_EVENT_PARTICLE + 19, LevelEvent.PARTICLE_DESTROY_EGG)
            .insert(LEVEL_EVENT_PARTICLE + 20, LevelEvent.PARTICLE_EVAPORATE_WATER)
            .insert(LEVEL_EVENT_PARTICLE + 21, LevelEvent.PARTICLE_DESTROY_BLOCK_NO_SOUND)
            .insert(LEVEL_EVENT_WORLD + 1, LevelEvent.START_RAINING)
            .insert(LEVEL_EVENT_WORLD + 2, LevelEvent.START_THUNDERSTORM)
            .insert(LEVEL_EVENT_WORLD + 3, LevelEvent.STOP_RAINING)
            .insert(LEVEL_EVENT_WORLD + 4, LevelEvent.STOP_THUNDERSTORM)
            .insert(LEVEL_EVENT_WORLD + 5, LevelEvent.GLOBAL_PAUSE)
            .insert(LEVEL_EVENT_WORLD + 6, LevelEvent.SIM_TIME_STEP)
            .insert(LEVEL_EVENT_WORLD + 7, LevelEvent.SIM_TIME_SCALE)
            .insert(LEVEL_EVENT_BLOCK + 0, LevelEvent.ACTIVATE_BLOCK)
            .insert(LEVEL_EVENT_BLOCK + 1, LevelEvent.CAULDRON_EXPLODE)
            .insert(LEVEL_EVENT_BLOCK + 2, LevelEvent.CAULDRON_DYE_ARMOR)
            .insert(LEVEL_EVENT_BLOCK + 3, LevelEvent.CAULDRON_CLEAN_ARMOR)
            .insert(LEVEL_EVENT_BLOCK + 4, LevelEvent.CAULDRON_FILL_POTION)
            .insert(LEVEL_EVENT_BLOCK + 5, LevelEvent.CAULDRON_TAKE_POTION)
            .insert(LEVEL_EVENT_BLOCK + 6, LevelEvent.CAULDRON_FILL_WATER)
            .insert(LEVEL_EVENT_BLOCK + 7, LevelEvent.CAULDRON_TAKE_WATER)
            .insert(LEVEL_EVENT_BLOCK + 8, LevelEvent.CAULDRON_ADD_DYE)
            .insert(LEVEL_EVENT_BLOCK + 9, LevelEvent.CAULDRON_CLEAN_BANNER)
            .insert(LEVEL_EVENT_BLOCK + 10, LevelEvent.CAULDRON_FLUSH)
            .insert(LEVEL_EVENT_PARTICLE_TYPE + 0, ParticleType.UNDEFINED)
            .insert(LEVEL_EVENT_PARTICLE_TYPE + 1, ParticleType.BUBBLE)
            .insert(LEVEL_EVENT_PARTICLE_TYPE + 2, ParticleType.CRIT)
            .insert(LEVEL_EVENT_PARTICLE_TYPE + 3, ParticleType.BLOCK_FORCE_FIELD)
            .insert(LEVEL_EVENT_PARTICLE_TYPE + 4, ParticleType.SMOKE)
            .insert(LEVEL_EVENT_PARTICLE_TYPE + 5, ParticleType.EXPLODE)
            .insert(LEVEL_EVENT_PARTICLE_TYPE + 6, ParticleType.EVAPORATION)
            .insert(LEVEL_EVENT_PARTICLE_TYPE + 7, ParticleType.FLAME)
            .insert(LEVEL_EVENT_PARTICLE_TYPE + 8, ParticleType.LAVA)
            .insert(LEVEL_EVENT_PARTICLE_TYPE + 9, ParticleType.LARGE_SMOKE)
            .insert(LEVEL_EVENT_PARTICLE_TYPE + 10, ParticleType.RED_DUST)
            .insert(LEVEL_EVENT_PARTICLE_TYPE + 11, ParticleType.RISING_BORDER_DUST)
            .insert(LEVEL_EVENT_PARTICLE_TYPE + 12, ParticleType.ICON_CRACK)
            .insert(LEVEL_EVENT_PARTICLE_TYPE + 13, ParticleType.SNOWBALL_POOF)
            .insert(LEVEL_EVENT_PARTICLE_TYPE + 14, ParticleType.LARGE_EXPLODE)
            .insert(LEVEL_EVENT_PARTICLE_TYPE + 15, ParticleType.HUGE_EXPLOSION)
            .insert(LEVEL_EVENT_PARTICLE_TYPE + 16, ParticleType.MOB_FLAME)
            .insert(LEVEL_EVENT_PARTICLE_TYPE + 17, ParticleType.HEART)
            .insert(LEVEL_EVENT_PARTICLE_TYPE + 18, ParticleType.TERRAIN)
            .insert(LEVEL_EVENT_PARTICLE_TYPE + 19, ParticleType.TOWN_AURA)
            .insert(LEVEL_EVENT_PARTICLE_TYPE + 20, ParticleType.PORTAL)
            .insert(LEVEL_EVENT_PARTICLE_TYPE + 21, ParticleType.WATER_SPLASH)
            .insert(LEVEL_EVENT_PARTICLE_TYPE + 22, ParticleType.WATER_WAKE)
            .insert(LEVEL_EVENT_PARTICLE_TYPE + 23, ParticleType.DRIP_WATER)
            .insert(LEVEL_EVENT_PARTICLE_TYPE + 24, ParticleType.DRIP_LAVA)
            .insert(LEVEL_EVENT_PARTICLE_TYPE + 25, ParticleType.FALLING_DUST)
            .insert(LEVEL_EVENT_PARTICLE_TYPE + 26, ParticleType.MOB_SPELL)
            .insert(LEVEL_EVENT_PARTICLE_TYPE + 27, ParticleType.MOB_SPELL_AMBIENT)
            .insert(LEVEL_EVENT_PARTICLE_TYPE + 28, ParticleType.MOB_SPELL_INSTANTANEOUS)
            .insert(LEVEL_EVENT_PARTICLE_TYPE + 29, ParticleType.INK)
            .insert(LEVEL_EVENT_PARTICLE_TYPE + 30, ParticleType.SLIME)
            .insert(LEVEL_EVENT_PARTICLE_TYPE + 31, ParticleType.RAIN_SPLASH)
            .insert(LEVEL_EVENT_PARTICLE_TYPE + 32, ParticleType.VILLAGER_ANGRY)
            .insert(LEVEL_EVENT_PARTICLE_TYPE + 33, ParticleType.VILLAGER_HAPPY)
            .insert(LEVEL_EVENT_PARTICLE_TYPE + 34, ParticleType.ENCHANTING_TABLE)
            .insert(LEVEL_EVENT_PARTICLE_TYPE + 35, ParticleType.TRACKER_EMITTER)
            .insert(LEVEL_EVENT_PARTICLE_TYPE + 36, ParticleType.NOTE)
            .insert(LEVEL_EVENT_PARTICLE_TYPE + 37, ParticleType.WITCH_SPELL)
            .insert(LEVEL_EVENT_PARTICLE_TYPE + 38, ParticleType.CARROT_BOOST)
            .insert(LEVEL_EVENT_PARTICLE_TYPE + 39, ParticleType.MOB_APPEARANCE)
            .insert(LEVEL_EVENT_PARTICLE_TYPE + 40, ParticleType.END_ROD)
            .insert(LEVEL_EVENT_PARTICLE_TYPE + 41, ParticleType.DRAGON_BREATH)
            .insert(LEVEL_EVENT_PARTICLE_TYPE + 42, ParticleType.SPIT)
            .insert(LEVEL_EVENT_PARTICLE_TYPE + 43, ParticleType.TOTEM)
            .insert(LEVEL_EVENT_PARTICLE_TYPE + 44, ParticleType.FOOD)
            .build();

    protected static final TypeMap<SoundEvent> SOUND_EVENTS = TypeMap.builder(SoundEvent.class)
            .insert(0, SoundEvent.ITEM_USE_ON)
            .insert(1, SoundEvent.HIT)
            .insert(2, SoundEvent.STEP)
            .insert(3, SoundEvent.FLY)
            .insert(4, SoundEvent.JUMP)
            .insert(5, SoundEvent.BREAK)
            .insert(6, SoundEvent.PLACE)
            .insert(7, SoundEvent.HEAVY_STEP)
            .insert(8, SoundEvent.GALLOP)
            .insert(9, SoundEvent.FALL)
            .insert(10, SoundEvent.AMBIENT)
            .insert(11, SoundEvent.AMBIENT_BABY)
            .insert(12, SoundEvent.AMBIENT_IN_WATER)
            .insert(13, SoundEvent.BREATHE)
            .insert(14, SoundEvent.DEATH)
            .insert(15, SoundEvent.DEATH_IN_WATER)
            .insert(16, SoundEvent.DEATH_TO_ZOMBIE)
            .insert(17, SoundEvent.HURT)
            .insert(18, SoundEvent.HURT_IN_WATER)
            .insert(19, SoundEvent.MAD)
            .insert(20, SoundEvent.BOOST)
            .insert(21, SoundEvent.BOW)
            .insert(22, SoundEvent.SQUISH_BIG)
            .insert(23, SoundEvent.SQUISH_SMALL)
            .insert(24, SoundEvent.FALL_BIG)
            .insert(25, SoundEvent.FALL_SMALL)
            .insert(26, SoundEvent.SPLASH)
            .insert(27, SoundEvent.FIZZ)
            .insert(28, SoundEvent.FLAP)
            .insert(29, SoundEvent.SWIM)
            .insert(30, SoundEvent.DRINK)
            .insert(31, SoundEvent.EAT)
            .insert(32, SoundEvent.TAKEOFF)
            .insert(33, SoundEvent.SHAKE)
            .insert(34, SoundEvent.PLOP)
            .insert(35, SoundEvent.LAND)
            .insert(36, SoundEvent.SADDLE)
            .insert(37, SoundEvent.ARMOR)
            .insert(38, SoundEvent.MOB_ARMOR_STAND_PLACE)
            .insert(39, SoundEvent.ADD_CHEST)
            .insert(40, SoundEvent.THROW)
            .insert(41, SoundEvent.ATTACK)
            .insert(42, SoundEvent.ATTACK_NODAMAGE)
            .insert(43, SoundEvent.ATTACK_STRONG)
            .insert(44, SoundEvent.WARN)
            .insert(45, SoundEvent.SHEAR)
            .insert(46, SoundEvent.MILK)
            .insert(47, SoundEvent.THUNDER)
            .insert(48, SoundEvent.EXPLODE)
            .insert(49, SoundEvent.FIRE)
            .insert(50, SoundEvent.IGNITE)
            .insert(51, SoundEvent.FUSE)
            .insert(52, SoundEvent.STARE)
            .insert(53, SoundEvent.SPAWN)
            .insert(54, SoundEvent.SHOOT)
            .insert(55, SoundEvent.BREAK_BLOCK)
            .insert(56, SoundEvent.LAUNCH)
            .insert(57, SoundEvent.BLAST)
            .insert(58, SoundEvent.LARGE_BLAST)
            .insert(59, SoundEvent.TWINKLE)
            .insert(60, SoundEvent.REMEDY)
            .insert(61, SoundEvent.UNFECT)
            .insert(62, SoundEvent.LEVELUP)
            .insert(63, SoundEvent.BOW_HIT)
            .insert(64, SoundEvent.BULLET_HIT)
            .insert(65, SoundEvent.EXTINGUISH_FIRE)
            .insert(66, SoundEvent.ITEM_FIZZ)
            .insert(67, SoundEvent.CHEST_OPEN)
            .insert(68, SoundEvent.CHEST_CLOSED)
            .insert(69, SoundEvent.SHULKERBOX_OPEN)
            .insert(70, SoundEvent.SHULKERBOX_CLOSED)
            .insert(71, SoundEvent.ENDERCHEST_OPEN)
            .insert(72, SoundEvent.ENDERCHEST_CLOSED)
            .insert(73, SoundEvent.POWER_ON)
            .insert(74, SoundEvent.POWER_OFF)
            .insert(75, SoundEvent.ATTACH)
            .insert(76, SoundEvent.DETACH)
            .insert(77, SoundEvent.DENY)
            .insert(78, SoundEvent.TRIPOD)
            .insert(79, SoundEvent.POP)
            .insert(80, SoundEvent.DROP_SLOT)
            .insert(81, SoundEvent.NOTE)
            .insert(82, SoundEvent.THORNS)
            .insert(83, SoundEvent.PISTON_IN)
            .insert(84, SoundEvent.PISTON_OUT)
            .insert(85, SoundEvent.PORTAL)
            .insert(86, SoundEvent.WATER)
            .insert(87, SoundEvent.LAVA_POP)
            .insert(88, SoundEvent.LAVA)
            .insert(89, SoundEvent.BURP)
            .insert(90, SoundEvent.BUCKET_FILL_WATER)
            .insert(91, SoundEvent.BUCKET_FILL_LAVA)
            .insert(92, SoundEvent.BUCKET_EMPTY_WATER)
            .insert(93, SoundEvent.BUCKET_EMPTY_LAVA)
            .insert(94, SoundEvent.ARMOR_EQUIP_CHAIN)
            .insert(95, SoundEvent.ARMOR_EQUIP_DIAMOND)
            .insert(96, SoundEvent.ARMOR_EQUIP_GENERIC)
            .insert(97, SoundEvent.ARMOR_EQUIP_GOLD)
            .insert(98, SoundEvent.ARMOR_EQUIP_IRON)
            .insert(99, SoundEvent.ARMOR_EQUIP_LEATHER)
            .insert(100, SoundEvent.ARMOR_EQUIP_ELYTRA)
            .insert(101, SoundEvent.RECORD_13)
            .insert(102, SoundEvent.RECORD_CAT)
            .insert(103, SoundEvent.RECORD_BLOCKS)
            .insert(104, SoundEvent.RECORD_CHIRP)
            .insert(105, SoundEvent.RECORD_FAR)
            .insert(106, SoundEvent.RECORD_MALL)
            .insert(107, SoundEvent.RECORD_MELLOHI)
            .insert(108, SoundEvent.RECORD_STAL)
            .insert(109, SoundEvent.RECORD_STRAD)
            .insert(110, SoundEvent.RECORD_WARD)
            .insert(111, SoundEvent.RECORD_11)
            .insert(112, SoundEvent.RECORD_WAIT)
            .insert(113, SoundEvent.STOP_RECORD)
            .insert(114, SoundEvent.FLOP)
            .insert(115, SoundEvent.ELDERGUARDIAN_CURSE)
            .insert(116, SoundEvent.MOB_WARNING)
            .insert(117, SoundEvent.MOB_WARNING_BABY)
            .insert(118, SoundEvent.TELEPORT)
            .insert(119, SoundEvent.SHULKER_OPEN)
            .insert(120, SoundEvent.SHULKER_CLOSE)
            .insert(121, SoundEvent.HAGGLE)
            .insert(122, SoundEvent.HAGGLE_YES)
            .insert(123, SoundEvent.HAGGLE_NO)
            .insert(124, SoundEvent.HAGGLE_IDLE)
            .insert(125, SoundEvent.CHORUS_GROW)
            .insert(126, SoundEvent.CHORUS_DEATH)
            .insert(127, SoundEvent.GLASS)
            .insert(128, SoundEvent.POTION_BREWED)
            .insert(129, SoundEvent.CAST_SPELL)
            .insert(130, SoundEvent.PREPARE_ATTACK)
            .insert(131, SoundEvent.PREPARE_SUMMON)
            .insert(132, SoundEvent.PREPARE_WOLOLO)
            .insert(133, SoundEvent.FANG)
            .insert(134, SoundEvent.CHARGE)
            .insert(135, SoundEvent.CAMERA_TAKE_PICTURE)
            .insert(136, SoundEvent.LEASHKNOT_PLACE)
            .insert(137, SoundEvent.LEASHKNOT_BREAK)
            .insert(138, SoundEvent.GROWL)
            .insert(139, SoundEvent.WHINE)
            .insert(140, SoundEvent.PANT)
            .insert(141, SoundEvent.PURR)
            .insert(142, SoundEvent.PURREOW)
            .insert(143, SoundEvent.DEATH_MIN_VOLUME)
            .insert(144, SoundEvent.DEATH_MID_VOLUME)
            .insert(145, SoundEvent.IMITATE_BLAZE)
            .insert(146, SoundEvent.IMITATE_CAVE_SPIDER)
            .insert(147, SoundEvent.IMITATE_CREEPER)
            .insert(148, SoundEvent.IMITATE_ELDER_GUARDIAN)
            .insert(149, SoundEvent.IMITATE_ENDER_DRAGON)
            .insert(150, SoundEvent.IMITATE_ENDERMAN)
            .insert(152, SoundEvent.IMITATE_EVOCATION_ILLAGER)
            .insert(153, SoundEvent.IMITATE_GHAST)
            .insert(154, SoundEvent.IMITATE_HUSK)
            .insert(155, SoundEvent.IMITATE_ILLUSION_ILLAGER)
            .insert(156, SoundEvent.IMITATE_MAGMA_CUBE)
            .insert(157, SoundEvent.IMITATE_POLAR_BEAR)
            .insert(158, SoundEvent.IMITATE_SHULKER)
            .insert(159, SoundEvent.IMITATE_SILVERFISH)
            .insert(160, SoundEvent.IMITATE_SKELETON)
            .insert(161, SoundEvent.IMITATE_SLIME)
            .insert(162, SoundEvent.IMITATE_SPIDER)
            .insert(163, SoundEvent.IMITATE_STRAY)
            .insert(164, SoundEvent.IMITATE_VEX)
            .insert(165, SoundEvent.IMITATE_VINDICATION_ILLAGER)
            .insert(166, SoundEvent.IMITATE_WITCH)
            .insert(167, SoundEvent.IMITATE_WITHER)
            .insert(168, SoundEvent.IMITATE_WITHER_SKELETON)
            .insert(169, SoundEvent.IMITATE_WOLF)
            .insert(170, SoundEvent.IMITATE_ZOMBIE)
            .insert(171, SoundEvent.IMITATE_ZOMBIE_PIGMAN)
            .insert(172, SoundEvent.IMITATE_ZOMBIE_VILLAGER)
            .insert(173, SoundEvent.BLOCK_END_PORTAL_FRAME_FILL)
            .insert(174, SoundEvent.BLOCK_END_PORTAL_SPAWN)
            .insert(175, SoundEvent.RANDOM_ANVIL_USE)
            .insert(176, SoundEvent.BOTTLE_DRAGONBREATH)
            .insert(177, SoundEvent.PORTAL_TRAVEL)
            .insert(178, SoundEvent.ITEM_TRIDENT_HIT)
            .insert(179, SoundEvent.ITEM_TRIDENT_RETURN)
            .insert(180, SoundEvent.ITEM_TRIDENT_RIPTIDE_1)
            .insert(181, SoundEvent.ITEM_TRIDENT_RIPTIDE_2)
            .insert(182, SoundEvent.ITEM_TRIDENT_RIPTIDE_3)
            .insert(183, SoundEvent.ITEM_TRIDENT_THROW)
            .insert(184, SoundEvent.ITEM_TRIDENT_THUNDER)
            .insert(185, SoundEvent.ITEM_TRIDENT_HIT_GROUND)
            .insert(186, SoundEvent.DEFAULT)
            .insert(188, SoundEvent.ELEMENT_CONSTRUCTOR_OPEN)
            .insert(189, SoundEvent.ICE_BOMB_HIT)
            .insert(190, SoundEvent.BALLOON_POP)
            .insert(191, SoundEvent.LT_REACTION_ICE_BOMB)
            .insert(192, SoundEvent.LT_REACTION_BLEACH)
            .insert(193, SoundEvent.LT_REACTION_E_PASTE)
            .insert(194, SoundEvent.LT_REACTION_E_PASTE2)
            .insert(199, SoundEvent.LT_REACTION_FERTILIZER)
            .insert(200, SoundEvent.LT_REACTION_FIREBALL)
            .insert(201, SoundEvent.LT_REACTION_MG_SALT)
            .insert(202, SoundEvent.LT_REACTION_MISC_FIRE)
            .insert(203, SoundEvent.LT_REACTION_FIRE)
            .insert(204, SoundEvent.LT_REACTION_MISC_EXPLOSION)
            .insert(205, SoundEvent.LT_REACTION_MISC_MYSTICAL)
            .insert(206, SoundEvent.LT_REACTION_MISC_MYSTICAL2)
            .insert(207, SoundEvent.LT_REACTION_PRODUCT)
            .insert(208, SoundEvent.SPARKLER_USE)
            .insert(209, SoundEvent.GLOWSTICK_USE)
            .insert(210, SoundEvent.SPARKLER_ACTIVE)
            .insert(211, SoundEvent.CONVERT_TO_DROWNED)
            .insert(212, SoundEvent.BUCKET_FILL_FISH)
            .insert(213, SoundEvent.BUCKET_EMPTY_FISH)
            .insert(214, SoundEvent.BUBBLE_UP)
            .insert(215, SoundEvent.BUBBLE_DOWN)
            .insert(216, SoundEvent.BUBBLE_POP)
            .insert(217, SoundEvent.BUBBLE_UP_INSIDE)
            .insert(218, SoundEvent.BUBBLE_DOWN_INSIDE)
            .insert(219, SoundEvent.BABY_HURT)
            .insert(220, SoundEvent.BABY_DEATH)
            .insert(221, SoundEvent.BABY_STEP)
            .insert(222, SoundEvent.BABY_SPAWN)
            .insert(223, SoundEvent.BORN)
            .insert(224, SoundEvent.BLOCK_TURTLE_EGG_BREAK)
            .insert(225, SoundEvent.BLOCK_TURTLE_EGG_CRACK)
            .insert(226, SoundEvent.BLOCK_TURTLE_EGG_HATCH)
            .insert(227, SoundEvent.TURTLE_LAY_EGG)
            .insert(228, SoundEvent.BLOCK_TURTLE_EGG_ATTACK)
            .insert(229, SoundEvent.BEACON_ACTIVATE)
            .insert(230, SoundEvent.BEACON_AMBIENT)
            .insert(231, SoundEvent.BEACON_DEACTIVATE)
            .insert(232, SoundEvent.BEACON_POWER)
            .insert(233, SoundEvent.CONDUIT_ACTIVATE)
            .insert(234, SoundEvent.CONDUIT_AMBIENT)
            .insert(235, SoundEvent.CONDUIT_ATTACK)
            .insert(236, SoundEvent.CONDUIT_DEACTIVATE)
            .insert(237, SoundEvent.CONDUIT_SHORT)
            .insert(238, SoundEvent.SWOOP)
            .insert(239, SoundEvent.UNDEFINED)
            .build();

    protected static final TypeMap<EntityEventType> ENTITY_EVENTS = TypeMap.builder(EntityEventType.class)
            .insert(0, EntityEventType.NONE)
            .insert(1, EntityEventType.JUMP)
            .insert(2, EntityEventType.HURT)
            .insert(3, EntityEventType.DEATH)
            .insert(4, EntityEventType.ATTACK_START)
            .insert(5, EntityEventType.ATTACK_STOP)
            .insert(6, EntityEventType.TAME_FAILED)
            .insert(7, EntityEventType.TAME_SUCCEEDED)
            .insert(8, EntityEventType.SHAKE_WETNESS)
            .insert(9, EntityEventType.USE_ITEM)
            .insert(10, EntityEventType.EAT_GRASS)
            .insert(11, EntityEventType.FISH_HOOK_BUBBLE)
            .insert(12, EntityEventType.FISH_HOOK_POSITION)
            .insert(13, EntityEventType.FISH_HOOK_TIME)
            .insert(14, EntityEventType.FISH_HOOK_TEASE)
            .insert(15, EntityEventType.SQUID_FLEEING)
            .insert(16, EntityEventType.ZOMBIE_VILLAGER_CURE)
            .insert(17, EntityEventType.PLAY_AMBIENT)
            .insert(18, EntityEventType.RESPAWN)
            .insert(19, EntityEventType.GOLEM_FLOWER_OFFER)
            .insert(20, EntityEventType.GOLEM_FLOWER_WITHDRAW)
            .insert(21, EntityEventType.LOVE_PARTICLES)
            .insert(22, EntityEventType.VILLAGER_ANGRY)
            .insert(23, EntityEventType.VILLAGER_HAPPY)
            .insert(24, EntityEventType.WITCH_HAT_MAGIC)
            .insert(25, EntityEventType.FIREWORK_EXPLODE)
            .insert(26, EntityEventType.IN_LOVE_HEARTS)
            .insert(27, EntityEventType.SILVERFISH_MERGE_WITH_STONE)
            .insert(28, EntityEventType.GUARDIAN_ATTACK_ANIMATION)
            .insert(29, EntityEventType.WITCH_DRINK_POTION)
            .insert(30, EntityEventType.WITCH_THROW_POTION)
            .insert(31, EntityEventType.PRIME_TNT_MINECART)
            .insert(32, EntityEventType.PRIME_CREEPER)
            .insert(33, EntityEventType.AIR_SUPPLY)
            .insert(34, EntityEventType.PLAYER_ADD_XP_LEVELS)
            .insert(35, EntityEventType.ELDER_GUARDIAN_CURSE)
            .insert(36, EntityEventType.AGENT_ARM_SWING)
            .insert(37, EntityEventType.ENDER_DRAGON_DEATH)
            .insert(38, EntityEventType.DUST_PARTICLES)
            .insert(39, EntityEventType.ARROW_SHAKE)
            // gap
            .insert(57, EntityEventType.EATING_ITEM)
            .insert(60, EntityEventType.BABY_ANIMAL_FEED)
            .insert(61, EntityEventType.DEATH_SMOKE_CLOUD)
            .insert(62, EntityEventType.COMPLETE_TRADE)
            .insert(63, EntityEventType.REMOVE_LEASH)
            .insert(64, EntityEventType.CARAVAN)
            .insert(65, EntityEventType.CONSUME_TOTEM)
            .insert(66, EntityEventType.CHECK_TREASURE_HUNTER_ACHIEVEMENT)
            .insert(67, EntityEventType.ENTITY_SPAWN)
            .insert(68, EntityEventType.DRAGON_FLAMING)
            .insert(69, EntityEventType.UPDATE_ITEM_STACK_SIZE)
            .insert(70, EntityEventType.START_SWIMMING)
            .insert(71, EntityEventType.BALLOON_POP)
            .insert(72, EntityEventType.TREASURE_HUNT)
            .build();

    public static TypeMap<CommandParam> COMMAND_PARAMS = TypeMap.builder(CommandParam.class)
            .insert(1, CommandParam.INT)
            .insert(2, CommandParam.FLOAT)
            .insert(3, CommandParam.VALUE)
            .insert(4, CommandParam.WILDCARD_INT)
            .insert(5, CommandParam.OPERATOR)
            .insert(6, CommandParam.TARGET)
            .insert(7, CommandParam.WILDCARD_TARGET)
            .insert(14, CommandParam.FILE_PATH)
            .insert(18, CommandParam.INT_RANGE)
            .insert(26, CommandParam.STRING)
            .insert(28, CommandParam.POSITION)
            .insert(31, CommandParam.MESSAGE)
            .insert(33, CommandParam.TEXT)
            .insert(36, CommandParam.JSON)
            .insert(43, CommandParam.COMMAND)
            .build();

    public static final BedrockCodec CODEC = BedrockCodec.builder()
            .protocolVersion(291)
            .minecraftVersion("1.7.0")
            .helper(() -> new BedrockCodecHelper_v291(ENTITY_DATA, ENTITY_DATA_TYPES, ENTITY_FLAGS, GAME_RULE_TYPES))
            .registerPacket(LoginPacket.class, LoginSerializer_v291.INSTANCE, 1)
            .registerPacket(PlayStatusPacket.class, PlayStatusSerializer_v291.INSTANCE, 2)
            .registerPacket(ServerToClientHandshakePacket.class, ServerToClientHandshakeSerializer_v291.INSTANCE, 3)
            .registerPacket(ClientToServerHandshakePacket.class, ClientToServerHandshakeSerializer_v291.INSTANCE, 4)
            .registerPacket(DisconnectPacket.class, DisconnectSerializer_v291.INSTANCE, 5)
            .registerPacket(ResourcePacksInfoPacket.class, ResourcePacksInfoSerializer_v291.INSTANCE, 6)
            .registerPacket(ResourcePackStackPacket.class, ResourcePackStackSerializer_v291.INSTANCE, 7)
            .registerPacket(ResourcePackClientResponsePacket.class, ResourcePackClientResponseSerializer_v291.INSTANCE, 8)
            .registerPacket(TextPacket.class, TextSerializer_v291.INSTANCE, 9)
            .registerPacket(SetTimePacket.class, SetTimeSerializer_v291.INSTANCE, 10)
            .registerPacket(StartGamePacket.class, StartGameSerializer_v291.INSTANCE, 11)
            .registerPacket(AddPlayerPacket.class, AddPlayerSerializer_v291.INSTANCE, 12)
            .registerPacket(AddEntityPacket.class, AddEntitySerializer_v291.INSTANCE, 13)
            .registerPacket(RemoveEntityPacket.class, RemoveEntitySerializer_v291.INSTANCE, 14)
            .registerPacket(AddItemEntityPacket.class, AddItemEntitySerializer_v291.INSTANCE, 15)
            .registerPacket(AddHangingEntityPacket.class, AddHangingEntitySerializer_v291.INSTANCE, 16)
            .registerPacket(TakeItemEntityPacket.class, TakeItemEntitySerializer_v291.INSTANCE, 17)
            .registerPacket(MoveEntityAbsolutePacket.class, MoveEntityAbsoluteSerializer_v291.INSTANCE, 18)
            .registerPacket(MovePlayerPacket.class, MovePlayerSerializer_v291.INSTANCE, 19)
            .registerPacket(RiderJumpPacket.class, RiderJumpSerializer_v291.INSTANCE, 20)
            .registerPacket(UpdateBlockPacket.class, UpdateBlockSerializer_v291.INSTANCE, 21)
            .registerPacket(AddPaintingPacket.class, AddPaintingSerializer_v291.INSTANCE, 22)
            .registerPacket(ExplodePacket.class, ExplodeSerializer_v291.INSTANCE, 23)
            .registerPacket(LevelSoundEvent1Packet.class, new LevelSoundEvent1Serializer_v291(SOUND_EVENTS), 24)
            .registerPacket(LevelEventPacket.class, new LevelEventSerializer_v291(LEVEL_EVENTS), 25)
            .registerPacket(BlockEventPacket.class, BlockEventSerializer_v291.INSTANCE, 26)
            .registerPacket(EntityEventPacket.class, new EntityEventSerializer_v291(ENTITY_EVENTS), 27)
            .registerPacket(MobEffectPacket.class, MobEffectSerializer_v291.INSTANCE, 28)
            .registerPacket(UpdateAttributesPacket.class, UpdateAttributesSerializer_v291.INSTANCE, 29)
            .registerPacket(InventoryTransactionPacket.class, InventoryTransactionSerializer_v291.INSTANCE, 30)
            .registerPacket(MobEquipmentPacket.class, MobEquipmentSerializer_v291.INSTANCE, 31)
            .registerPacket(MobArmorEquipmentPacket.class, MobArmorEquipmentSerializer_v291.INSTANCE, 32)
            .registerPacket(InteractPacket.class, InteractSerializer_v291.INSTANCE, 33)
            .registerPacket(BlockPickRequestPacket.class, BlockPickRequestSerializer_v291.INSTANCE, 34)
            .registerPacket(EntityPickRequestPacket.class, EntityPickRequestSerializer_v291.INSTANCE, 35)
            .registerPacket(PlayerActionPacket.class, PlayerActionSerializer_v291.INSTANCE, 36)
            .registerPacket(EntityFallPacket.class, EntityFallSerializer_v291.INSTANCE, 37)
            .registerPacket(HurtArmorPacket.class, HurtArmorSerializer_v291.INSTANCE, 38)
            .registerPacket(SetEntityDataPacket.class, SetEntityDataSerializer_v291.INSTANCE, 39)
            .registerPacket(SetEntityMotionPacket.class, SetEntityMotionSerializer_v291.INSTANCE, 40)
            .registerPacket(SetEntityLinkPacket.class, SetEntityLinkSerializer_v291.INSTANCE, 41)
            .registerPacket(SetHealthPacket.class, SetHealthSerializer_v291.INSTANCE, 42)
            .registerPacket(SetSpawnPositionPacket.class, SetSpawnPositionSerializer_v291.INSTANCE, 43)
            .registerPacket(AnimatePacket.class, AnimateSerializer_v291.INSTANCE, 44)
            .registerPacket(RespawnPacket.class, RespawnSerializer_v291.INSTANCE, 45)
            .registerPacket(ContainerOpenPacket.class, ContainerOpenSerializer_v291.INSTANCE, 46)
            .registerPacket(ContainerClosePacket.class, ContainerCloseSerializer_v291.INSTANCE, 47)
            .registerPacket(PlayerHotbarPacket.class, PlayerHotbarSerializer_v291.INSTANCE, 48)
            .registerPacket(InventoryContentPacket.class, InventoryContentSerializer_v291.INSTANCE, 49)
            .registerPacket(InventorySlotPacket.class, InventorySlotSerializer_v291.INSTANCE, 50)
            .registerPacket(ContainerSetDataPacket.class, ContainerSetDataSerializer_v291.INSTANCE, 51)
            .registerPacket(CraftingDataPacket.class, CraftingDataSerializer_v291.INSTANCE, 52)
            .registerPacket(CraftingEventPacket.class, CraftingEventSerializer_v291.INSTANCE, 53)
            .registerPacket(GuiDataPickItemPacket.class, GuiDataPickItemSerializer_v291.INSTANCE, 54)
            .registerPacket(AdventureSettingsPacket.class, AdventureSettingsSerializer_v291.INSTANCE, 55)
            .registerPacket(BlockEntityDataPacket.class, BlockEntityDataSerializer_v291.INSTANCE, 56)
            .registerPacket(PlayerInputPacket.class, PlayerInputSerializer_v291.INSTANCE, 57)
            .registerPacket(LevelChunkPacket.class, FullChunkDataSerializer_v291.INSTANCE, 58)
            .registerPacket(SetCommandsEnabledPacket.class, SetCommandsEnabledSerializer_v291.INSTANCE, 59)
            .registerPacket(SetDifficultyPacket.class, SetDifficultySerializer_v291.INSTANCE, 60)
            .registerPacket(ChangeDimensionPacket.class, ChangeDimensionSerializer_v291.INSTANCE, 61)
            .registerPacket(SetPlayerGameTypePacket.class, SetPlayerGameTypeSerializer_v291.INSTANCE, 62)
            .registerPacket(PlayerListPacket.class, PlayerListSerializer_v291.INSTANCE, 63)
            .registerPacket(SimpleEventPacket.class, SimpleEventSerializer_v291.INSTANCE, 64)
            .registerPacket(EventPacket.class, EventSerializer_v291.INSTANCE, 65)
            .registerPacket(SpawnExperienceOrbPacket.class, SpawnExperienceOrbSerializer_v291.INSTANCE, 66)
            .registerPacket(ClientboundMapItemDataPacket.class, ClientboundMapItemDataSerializer_v291.INSTANCE, 67)
            .registerPacket(MapInfoRequestPacket.class, MapInfoRequestSerializer_v291.INSTANCE, 68)
            .registerPacket(RequestChunkRadiusPacket.class, RequestChunkRadiusSerializer_v291.INSTANCE, 69)
            .registerPacket(ChunkRadiusUpdatedPacket.class, ChunkRadiusUpdatedSerializer_v291.INSTANCE, 70)
            .registerPacket(ItemFrameDropItemPacket.class, ItemFrameDropItemSerializer_v291.INSTANCE, 71)
            .registerPacket(GameRulesChangedPacket.class, GameRulesChangedSerializer_v291.INSTANCE, 72)
            .registerPacket(CameraPacket.class, CameraSerializer_v291.INSTANCE, 73)
            .registerPacket(BossEventPacket.class, BossEventSerializer_v291.INSTANCE, 74)
            .registerPacket(ShowCreditsPacket.class, ShowCreditsSerializer_v291.INSTANCE, 75)
            .registerPacket(AvailableCommandsPacket.class, new AvailableCommandsSerializer_v291(COMMAND_PARAMS), 76)
            .registerPacket(CommandRequestPacket.class, CommandRequestSerializer_v291.INSTANCE, 77)
            .registerPacket(CommandBlockUpdatePacket.class, CommandBlockUpdateSerializer_v291.INSTANCE, 78)
            .registerPacket(CommandOutputPacket.class, CommandOutputSerializer_v291.INSTANCE, 79)
            .registerPacket(UpdateTradePacket.class, UpdateTradeSerializer_v291.INSTANCE, 80)
            .registerPacket(UpdateEquipPacket.class, UpdateEquipSerializer_v291.INSTANCE, 81)
            .registerPacket(ResourcePackDataInfoPacket.class, ResourcePackDataInfoSerializer_v291.INSTANCE, 82)
            .registerPacket(ResourcePackChunkDataPacket.class, ResourcePackChunkDataSerializer_v291.INSTANCE, 83)
            .registerPacket(ResourcePackChunkRequestPacket.class, ResourcePackChunkRequestSerializer_v291.INSTANCE, 84)
            .registerPacket(TransferPacket.class, TransferSerializer_v291.INSTANCE, 85)
            .registerPacket(PlaySoundPacket.class, PlaySoundSerializer_v291.INSTANCE, 86)
            .registerPacket(StopSoundPacket.class, StopSoundSerializer_v291.INSTANCE, 87)
            .registerPacket(SetTitlePacket.class, SetTitleSerializer_v291.INSTANCE, 88)
            .registerPacket(AddBehaviorTreePacket.class, AddBehaviorTreeSerializer_v291.INSTANCE, 89)
            .registerPacket(StructureBlockUpdatePacket.class, StructureBlockUpdateSerializer_v291.INSTANCE, 90)
            .registerPacket(ShowStoreOfferPacket.class, ShowStoreOfferSerializer_v291.INSTANCE, 91)
            .registerPacket(PurchaseReceiptPacket.class, PurchaseReceiptSerializer_v291.INSTANCE, 92)
            .registerPacket(PlayerSkinPacket.class, PlayerSkinSerializer_v291.INSTANCE, 93)
            .registerPacket(SubClientLoginPacket.class, SubClientLoginSerializer_v291.INSTANCE, 94)
            .registerPacket(AutomationClientConnectPacket.class, AutomationClientConnectSerializer_v291.INSTANCE, 95)
            .registerPacket(SetLastHurtByPacket.class, SetLastHurtBySerializer_v291.INSTANCE, 96)
            .registerPacket(BookEditPacket.class, BookEditSerializer_v291.INSTANCE, 97)
            .registerPacket(NpcRequestPacket.class, NpcRequestSerializer_v291.INSTANCE, 98)
            .registerPacket(PhotoTransferPacket.class, PhotoTransferSerializer_v291.INSTANCE, 99)
            .registerPacket(ModalFormRequestPacket.class, ModalFormRequestSerializer_v291.INSTANCE, 100)
            .registerPacket(ModalFormResponsePacket.class, ModalFormResponseSerializer_v291.INSTANCE, 101)
            .registerPacket(ServerSettingsRequestPacket.class, ServerSettingsRequestSerializer_v291.INSTANCE, 102)
            .registerPacket(ServerSettingsResponsePacket.class, ServerSettingsResponseSerializer_v291.INSTANCE, 103)
            .registerPacket(ShowProfilePacket.class, ShowProfileSerializer_v291.INSTANCE, 104)
            .registerPacket(SetDefaultGameTypePacket.class, SetDefaultGameTypeSerializer_v291.INSTANCE, 105)
            .registerPacket(RemoveObjectivePacket.class, RemoveObjectiveSerializer_v291.INSTANCE, 106)
            .registerPacket(SetDisplayObjectivePacket.class, SetDisplayObjectiveSerializer_v291.INSTANCE, 107)
            .registerPacket(SetScorePacket.class, SetScoreSerializer_v291.INSTANCE, 108)
            .registerPacket(LabTablePacket.class, LabTableSerializer_v291.INSTANCE, 109)
            .registerPacket(UpdateBlockSyncedPacket.class, UpdateBlockSyncedSerializer_v291.INSTANCE, 110)
            .registerPacket(MoveEntityDeltaPacket.class, MoveEntityDeltaSerializer_v291.INSTANCE, 111)
            .registerPacket(SetScoreboardIdentityPacket.class, SetScoreboardIdentitySerializer_v291.INSTANCE, 112)
            .registerPacket(SetLocalPlayerAsInitializedPacket.class, SetLocalPlayerAsInitializedSerializer_v291.INSTANCE, 113)
            .registerPacket(UpdateSoftEnumPacket.class, UpdateSoftEnumSerializer_v291.INSTANCE, 114)
            .registerPacket(NetworkStackLatencyPacket.class, NetworkStackLatencySerializer_v291.INSTANCE, 115)
            .registerPacket(ScriptCustomEventPacket.class, ScriptCustomEventSerializer_v291.INSTANCE, 117)
            .build();
}
